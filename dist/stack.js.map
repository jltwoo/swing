{"version":3,"sources":["stack.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAM,QAAQ,SAAR,KAAQ,CAAC,MAAD,EAAY;AACtB,QAAI,kBAAJ;QACI,qBADJ;QAEI,cAFJ;QAGI,qBAHJ;QAII,cAJJ,CADsB;;AAOtB,gBAAY,qBAAM;AACd,gBAAQ,EAAR,CADc;AAEd,uBAAe,IAAI,kBAAQ,YAAR,EAAnB,CAFc;AAGd,uBAAe,uBAAf,CAHc;AAId,gBAAQ,EAAR,CAJc;KAAN,CAPU;;AActB;;;;;;;AAdsB,SAqBtB,CAAM,SAAN,GAAkB,YAAM;AACpB,eAAO,MAAP,CADoB;KAAN;;;;;;;AArBI,SA8BtB,CAAM,eAAN,GAAwB,YAAM;AAC1B,eAAO,YAAP,CAD0B;KAAN;;;;;;;;;AA9BF,SAyCtB,CAAM,EAAN,GAAW,UAAC,SAAD,EAAY,QAAZ,EAAyB;AAChC,qBAAa,EAAb,CAAgB,SAAhB,EAA2B,QAA3B,EADgC;KAAzB;;;;;;;;AAzCW,SAmDtB,CAAM,UAAN,GAAmB,UAAC,OAAD,EAAa;AAC5B,YAAM,OAAO,oBAAK,KAAL,EAAY,OAAZ,CAAP,CADsB;AAE5B,YAAM,SAAS,CACX,UADW,EAEX,aAFW,EAGX,cAHW,EAIX,eAJW,EAKX,SALW,EAMX,YANW,EAOX,WAPW,EAQX,UARW,EASX,SATW,CAAT;;;AAFsB,cAe5B,CAAO,OAAP,CAAe,UAAC,SAAD,EAAe;AAC1B,iBAAK,EAAL,CAAQ,SAAR,EAAmB,UAAC,IAAD,EAAU;AACzB,6BAAa,OAAb,CAAqB,SAArB,EAAgC,IAAhC,EADyB;aAAV,CAAnB,CAD0B;SAAf,CAAf,CAf4B;;AAqB5B,cAAM,IAAN,CAAW;AACP,4BADO;AAEP,sBAFO;SAAX,EArB4B;;AA0B5B,eAAO,IAAP,CA1B4B;KAAb;;;;;;;;AAnDG,SAsFtB,CAAM,OAAN,GAAgB,UAAC,OAAD,EAAa;AACzB,YAAM,QAAQ,oBAAO,KAAP,EAAc;AACxB,4BADwB;SAAd,CAAR,CADmB;;AAKzB,YAAI,KAAJ,EAAW;AACP,mBAAO,MAAM,IAAN,CADA;SAAX;;AAIA,eAAO,IAAP,CATyB;KAAb;;;;;;;;AAtFM,SAwGtB,CAAM,WAAN,GAAoB,UAAC,IAAD,EAAU;AAC1B,eAAO,sBAAS,KAAT,EAAgB;AACnB,sBADmB;SAAhB,CAAP,CAD0B;KAAV,CAxGE;;AA8GtB,WAAO,KAAP,CA9GsB;CAAZ;;kBAiHC","file":"stack.js","sourcesContent":["import _ from 'lodash';\r\nimport Sister from 'sister';\r\nimport rebound from 'rebound';\r\nimport Card from './card';\r\n\r\n/**\r\n * @param {Object} config Stack configuration.\r\n * @return {Object} An instance of Stack object.\r\n */\r\nconst Stack = (config) => {\r\n    let construct,\r\n        eventEmitter,\r\n        index,\r\n        springSystem,\r\n        stack;\r\n\r\n    construct = () => {\r\n        stack = {};\r\n        springSystem = new rebound.SpringSystem();\r\n        eventEmitter = Sister();\r\n        index = [];\r\n    };\r\n\r\n    construct();\r\n\r\n    /**\r\n     * Get the configuration object.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    stack.getConfig = () => {\r\n        return config;\r\n    };\r\n\r\n    /**\r\n     * Get a singleton instance of the SpringSystem physics engine.\r\n     *\r\n     * @return {Sister}\r\n     */\r\n    stack.getSpringSystem = () => {\r\n        return springSystem;\r\n    };\r\n\r\n    /**\r\n     * Proxy to the instance of the event emitter.\r\n     *\r\n     * @param {String} eventName\r\n     * @param {String} listener\r\n     * @return {undefined}\r\n     */\r\n    stack.on = (eventName, listener) => {\r\n        eventEmitter.on(eventName, listener);\r\n    };\r\n\r\n    /**\r\n     * Creates an instance of Card and associates it with an element.\r\n     *\r\n     * @param {HTMLElement} element\r\n     * @return {Card}\r\n     */\r\n    stack.createCard = (element) => {\r\n        const card = Card(stack, element);\r\n        const events = [\r\n            'throwout',\r\n            'throwoutend',\r\n            'throwoutleft',\r\n            'throwoutright',\r\n            'throwin',\r\n            'throwinend',\r\n            'dragstart',\r\n            'dragmove',\r\n            'dragend'\r\n        ];\r\n\r\n        // Proxy Card events to the Stack.\r\n        events.forEach((eventName) => {\r\n            card.on(eventName, (data) => {\r\n                eventEmitter.trigger(eventName, data);\r\n            });\r\n        });\r\n\r\n        index.push({\r\n            element,\r\n            card\r\n        });\r\n\r\n        return card;\r\n    };\r\n\r\n    /**\r\n     * Returns an instance of Card associated with an element.\r\n     *\r\n     * @param {HTMLElement} element\r\n     * @return {Card|null}\r\n     */\r\n    stack.getCard = (element) => {\r\n        const group = _.find(index, {\r\n            element\r\n        });\r\n\r\n        if (group) {\r\n            return group.card;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Remove an instance of Card from the stack index.\r\n     *\r\n     * @param {Card} card\r\n     * @return {null}\r\n     */\r\n    stack.destroyCard = (card) => {\r\n        return _.remove(index, {\r\n            card\r\n        });\r\n    };\r\n\r\n    return stack;\r\n};\r\n\r\nexport default Stack;\r\n"],"sourceRoot":"/source/"}